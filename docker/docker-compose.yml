version: '3.8'

services:
  api:
    build:
      dockerfile: docker/dev/backend.Dockerfile
      context: ../
    image: bibliochouetteapi:latest
    command: "sleep infinity"
    environment:
      - ENV=development
    restart: always
    links:
      - db
    ports:
      - 8000:8000
    networks:
      - backend
    volumes:
      - type: bind
        source: ../backend
        target: /app
  frontend:
    build:
      dockerfile: docker/dev/frontend.Dockerfile
      context: ../
    image: bibliochouettefrontend:latest
    command: "sleep infinity"
    environment:
      - NODE_ENV=development
    restart: always
    links:
      - api
    ports:
      - 3000:3000
    networks:
      - backend
    volumes:
      - ../frontend:/app
      - exclude:/app/node_modules/
  db:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=$${DB_USER:?err}
      - POSTGRES_PASSWORD=$${DB_PASSWORD:?err}
      - POSTGRES_DB=$${DB_NAME:?err}
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - backend
  blackd:
    restart: always
    image: docker.io/pyfound/black
    command: blackd --bind-host 0.0.0.0 --bind-port 45484
    ports:
      - "45484:45484"
networks:
  backend:
volumes:
  db:
    driver: local
  exclude: